Компромиссы:
- все в одном контейнере V все в разных контейнерах
- собственные контейнеры V контейнеры других юзеров
- робот в отдельном контейнере V робот в контейнере приложения
- сборка один раз на хосте V сборка в каждом контейнере
- работа от имени рута V работа от имени юзера
- на хосте робот запускается при помощи fabric V при помощи обертки над pybot V при помощи manage.py

Вопросы:
- как получать ip приложения или можно завязаться на имя хоста?
- как получать разные имена хостов?
- как взаимодействуют контейнеры в рамках одного стенда?
- нужно ли билдить контейнеры перед каждым запуском?
- можно ли обновлять контейнеры на лету?
- кто распределяет тесты по стендам?
- как собираютя отчеты?

Итого:
- один dockerfile, где ставится и запускается приложение
- один figfile, где описывается стенд
- fabric в контейнерах не нужен
- fabric поднимает стенды
- fabric запускает главного робота на хосте

Контейнеры:
- mysql
- tomcat
- app, robot remote server